{"version":3,"file":"lifecycle-plugin.min.js","sources":["../src/utils.ts","../src/index.ts"],"sourcesContent":["import { NodeEditor } from \"rete\";\r\n\r\nexport function getHook<T extends unknown>(editor: NodeEditor, name: undefined | string, method: keyof T) {\r\n    if (!name) return () => null;\r\n    \r\n    const component = editor.getComponent(name);\r\n    \r\n    if (method in component) {\r\n        const c = component as T;\r\n\r\n        return c[method];\r\n    }\r\n\r\n    return () => null;\r\n}","import { NodeEditor } from 'rete';\r\nimport { OnCreated, OnDestroyed, OnConnect, OnConnected, OnDisconnect, OnDisconnected } from './interfaces';\r\nimport { getHook } from './utils';\r\n\r\nfunction install(editor: NodeEditor) {\r\n    editor.on('nodecreated', node =>\r\n        getHook<OnCreated>(editor, node.name, 'created')(node)\r\n    );\r\n    editor.on('noderemoved', node =>\r\n        getHook<OnDestroyed>(editor, node.name, 'destroyed')(node)\r\n    );\r\n    editor.on('connectioncreate', ({ input, output }) => {\r\n        if (getHook<OnConnect>(editor, input.node?.name, 'onconnect')(input) === false ||\r\n            getHook<OnConnect>(editor, output.node?.name, 'onconnect')(output) === false)\r\n            return false;\r\n    });\r\n    editor.on('connectioncreated', connection => {\r\n        getHook<OnConnected>(editor, connection.input.node?.name, 'connected')(connection);\r\n        getHook<OnConnected>(editor, connection.output.node?.name, 'connected')(connection);\r\n    });\r\n    editor.on('connectionremove', connection => {\r\n        if (getHook<OnDisconnect>(editor, connection.input.node?.name, 'ondisconnect')(connection) === false ||\r\n            getHook<OnDisconnect>(editor, connection.output.node?.name, 'ondisconnect')(connection) === false)\r\n            return false;\r\n    });\r\n    editor.on('connectionremoved', connection => {\r\n        getHook<OnDisconnected>(editor, connection.input.node?.name, 'disconnected')(connection);\r\n        getHook<OnDisconnected>(editor, connection.output.node?.name, 'disconnected')(connection);\r\n    });\r\n}\r\n\r\nexport * from './interfaces';\r\nexport default {\r\n    name: 'lifecycle',\r\n    install\r\n}"],"names":["getHook","editor","name","method","component","getComponent","install","on","node","input","output","_input$node","_output$node","connection","_connection$input$nod","_connection$output$no","_connection$input$nod2","_connection$output$no2","_connection$input$nod3","_connection$output$no3"],"mappings":";;;;;i0MAEO,SAASA,EAA2BC,EAAoBC,EAA0BC,OAChFD,EAAM,OAAO,kBAAM,UAElBE,EAAYH,EAAOI,aAAaH,UAElCC,KAAUC,EACAA,EAEDD,GAGN,kBAAM,YCmBF,CACXD,KAAM,YACNI,QA9BJ,SAAiBL,GACbA,EAAOM,GAAG,cAAe,SAAAC,UACrBR,EAAmBC,EAAQO,EAAKN,KAAM,UAAtCF,CAAiDQ,KAErDP,EAAOM,GAAG,cAAe,SAAAC,UACrBR,EAAqBC,EAAQO,EAAKN,KAAM,YAAxCF,CAAqDQ,KAEzDP,EAAOM,GAAG,mBAAoB,oBAAGE,IAAAA,MAAOC,IAAAA,WACqC,IAArEV,EAAmBC,YAAQQ,EAAMD,yBAANG,EAAYT,KAAM,YAA7CF,CAA0DS,KACa,IAAvET,EAAmBC,YAAQS,EAAOF,yBAAPI,EAAaV,KAAM,YAA9CF,CAA2DU,GAC3D,OAAO,IAEfT,EAAOM,GAAG,oBAAqB,SAAAM,WAC3Bb,EAAqBC,YAAQY,EAAWJ,MAAMD,yBAAjBM,EAAuBZ,KAAM,YAA1DF,CAAuEa,GACvEb,EAAqBC,YAAQY,EAAWH,OAAOF,yBAAlBO,EAAwBb,KAAM,YAA3DF,CAAwEa,KAE5EZ,EAAOM,GAAG,mBAAoB,SAAAM,eACqE,IAA3Fb,EAAsBC,YAAQY,EAAWJ,MAAMD,yBAAjBQ,EAAuBd,KAAM,eAA3DF,CAA2Ea,KACiB,IAA5Fb,EAAsBC,YAAQY,EAAWH,OAAOF,yBAAlBS,EAAwBf,KAAM,eAA5DF,CAA4Ea,GAC5E,OAAO,IAEfZ,EAAOM,GAAG,oBAAqB,SAAAM,WAC3Bb,EAAwBC,YAAQY,EAAWJ,MAAMD,yBAAjBU,EAAuBhB,KAAM,eAA7DF,CAA6Ea,GAC7Eb,EAAwBC,YAAQY,EAAWH,OAAOF,yBAAlBW,EAAwBjB,KAAM,eAA9DF,CAA8Ea"}