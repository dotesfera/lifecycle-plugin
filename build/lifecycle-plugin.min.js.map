{"version":3,"file":"lifecycle-plugin.min.js","sources":["../src/utils.ts","../src/index.ts"],"sourcesContent":["import { NodeEditor } from \"rete\";\r\n\r\nexport function getHook<T extends unknown>(editor: NodeEditor, name: undefined | string, method: keyof T) {\r\n    if (!name) return () => null;\r\n    \r\n    const component = editor.getComponent(name);\r\n    \r\n    if (method in component) {\r\n        const c = component as T;\r\n\r\n        return c[method];\r\n    }\r\n\r\n    return () => null;\r\n}","import { NodeEditor } from \"rete\";\r\nimport {\r\n  OnCreated,\r\n  OnDestroyed,\r\n  OnConnect,\r\n  OnConnected,\r\n  OnDisconnect,\r\n  OnDisconnected,\r\n  OnSelected,\r\n} from \"./interfaces\";\r\nimport { getHook } from \"./utils\";\r\n\r\nfunction install(editor: NodeEditor) {\r\n  editor.on(\"nodecreated\", (node) =>\r\n    getHook<OnCreated>(editor, node.name, \"created\")(node)\r\n  );\r\n  editor.on(\"noderemoved\", (node) =>\r\n    getHook<OnDestroyed>(editor, node.name, \"destroyed\")(node)\r\n  );\r\n  editor.on(\"connectioncreate\", ({ input, output }) => {\r\n    if (\r\n      getHook<OnConnect>(editor, input.node?.name, \"onconnect\")(input) ===\r\n        false ||\r\n      getHook<OnConnect>(editor, output.node?.name, \"onconnect\")(output) ===\r\n        false\r\n    )\r\n      return false;\r\n  });\r\n  editor.on(\"connectioncreated\", (connection) => {\r\n    getHook<OnConnected>(\r\n      editor,\r\n      connection.input.node?.name,\r\n      \"connected\"\r\n    )(connection);\r\n    getHook<OnConnected>(\r\n      editor,\r\n      connection.output.node?.name,\r\n      \"connected\"\r\n    )(connection);\r\n  });\r\n  editor.on(\"connectionremove\", (connection) => {\r\n    if (\r\n      getHook<OnDisconnect>(\r\n        editor,\r\n        connection.input.node?.name,\r\n        \"ondisconnect\"\r\n      )(connection) === false ||\r\n      getHook<OnDisconnect>(\r\n        editor,\r\n        connection.output.node?.name,\r\n        \"ondisconnect\"\r\n      )(connection) === false\r\n    )\r\n      return false;\r\n  });\r\n  editor.on(\"connectionremoved\", (connection) => {\r\n    getHook<OnDisconnected>(\r\n      editor,\r\n      connection.input.node?.name,\r\n      \"disconnected\"\r\n    )(connection);\r\n    getHook<OnDisconnected>(\r\n      editor,\r\n      connection.output.node?.name,\r\n      \"disconnected\"\r\n    )(connection);\r\n  });\r\n  // Dotesfera Added\r\n  editor.on(\"nodeselected\", (node) =>\r\n    getHook<OnSelected>(editor, node.name, \"onselected\")(node)\r\n  );\r\n}\r\n\r\nexport * from \"./interfaces\";\r\nexport default {\r\n  name: \"lifecycle\",\r\n  install,\r\n};\r\n"],"names":["getHook","editor","name","method","component","getComponent","install","on","node","input","output","_input$node","_output$node","connection","_connection$input$nod","_connection$output$no","_connection$input$nod2","_connection$output$no2","_connection$input$nod3","_connection$output$no3"],"mappings":";;;;;i0MAEO,SAASA,EAA2BC,EAAoBC,EAA0BC,OAChFD,EAAM,OAAO,kBAAM,UAElBE,EAAYH,EAAOI,aAAaH,UAElCC,KAAUC,EACAA,EAEDD,GAGN,kBAAM,YC6DF,CACbD,KAAM,YACNI,QAhEF,SAAiBL,GACfA,EAAOM,GAAG,cAAe,SAACC,UACxBR,EAAmBC,EAAQO,EAAKN,KAAM,UAAtCF,CAAiDQ,KAEnDP,EAAOM,GAAG,cAAe,SAACC,UACxBR,EAAqBC,EAAQO,EAAKN,KAAM,YAAxCF,CAAqDQ,KAEvDP,EAAOM,GAAG,mBAAoB,oBAAGE,IAAAA,MAAOC,IAAAA,WAGlC,IADFV,EAAmBC,YAAQQ,EAAMD,yBAANG,EAAYT,KAAM,YAA7CF,CAA0DS,KAGxD,IADFT,EAAmBC,YAAQS,EAAOF,yBAAPI,EAAaV,KAAM,YAA9CF,CAA2DU,GAG3D,OAAO,IAEXT,EAAOM,GAAG,oBAAqB,SAACM,WAC9Bb,EACEC,YACAY,EAAWJ,MAAMD,yBAAjBM,EAAuBZ,KACvB,YAHFF,CAIEa,GACFb,EACEC,YACAY,EAAWH,OAAOF,yBAAlBO,EAAwBb,KACxB,YAHFF,CAIEa,KAEJZ,EAAOM,GAAG,mBAAoB,SAACM,eAMT,IAJlBb,EACEC,YACAY,EAAWJ,MAAMD,yBAAjBQ,EAAuBd,KACvB,eAHFF,CAIEa,KAKgB,IAJlBb,EACEC,YACAY,EAAWH,OAAOF,yBAAlBS,EAAwBf,KACxB,eAHFF,CAIEa,GAEF,OAAO,IAEXZ,EAAOM,GAAG,oBAAqB,SAACM,WAC9Bb,EACEC,YACAY,EAAWJ,MAAMD,yBAAjBU,EAAuBhB,KACvB,eAHFF,CAIEa,GACFb,EACEC,YACAY,EAAWH,OAAOF,yBAAlBW,EAAwBjB,KACxB,eAHFF,CAIEa,KAGJZ,EAAOM,GAAG,eAAgB,SAACC,UACzBR,EAAoBC,EAAQO,EAAKN,KAAM,aAAvCF,CAAqDQ"}